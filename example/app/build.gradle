apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'com.jakewharton.butterknife'

android {
    compileSdkVersion versions.compileSdkVersion
    defaultConfig {
        minSdkVersion versions.minSdkVersion
        targetSdkVersion versions.targetSdkVersion
        versionCode versions.versionCode
        versionName versions.versionName
        applicationId "com.niluogege.example.fastcodeframe"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags "-frtti -fexceptions"
            }
        }

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')



    /**
     * 这里要加上 其他组件
     *
     *在宿主 App 中使用 implementation 依赖业务组件, 业务组件的代码就会完全暴露给宿主 App, 不利于代码的隔离
     *使用 runtimeOnly 依赖业务组件, 可实现业务组件的代码在编译时对宿主 App 不可见, 仅在运行时对宿主 App 可见
     */
    if (!isModule.toBoolean()) {
        runtimeOnly project(":module-user")
        runtimeOnly project(":module-order")
    }

    /*依赖了 commonSDK*/
    implementation project(':commonsdk')


    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation deps.support.appcompatV7
    implementation deps.constraintLayout
    testImplementation deps.junit
    androidTestImplementation deps.testRunner
    androidTestImplementation deps.testEspresso

    /*路由编译器 每个application中都要配置 */
    annotationProcessor deps.arouter.arouterCompiler
    /*butterknife编译器 每个application中都要配置*/
    annotationProcessor deps.butterknife.compiler
}
